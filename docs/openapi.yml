openapi: 3.0.2
info:
  title: CVE Services API
  description: The CVE services API which supports automation tooling for the CVE Project.
  termsOfService: https://placeholder.cve.mitre.org/api/terms
  contact:
    name: CVE Services API
    url: https://github.com/CVEProject/cve-services
    email: cve-board-auto-list@mitre.org
  license:
    name: Creative Commons Zero v1.0 Universal
    url: https://creativecommons.org/publicdomain/zero/1.0/legalcode
  version: 1.0.0
servers:
  - url: https://cveawg.mitre.org/api
    description: Production server
components:
  parameters:
    api-entity-header:
      in: header
      name: CVE-API-ORG
      description: The shortname for the entity (e.g., CNA, ADP) that is authenticated or requesting authentication.
      required: true
      schema:
        type: string
    api-user-header:
      in: header
      name: CVE-API-USER
      description: The username for the account that is making the request.
      required: true
      schema:
        type: string
    api-secret-header:
      in: header
      name: CVE-API-KEY
      description: The user's api key.
      required: true
      schema:
        type: string
    cve-id-path:
      in: path
      name: cve-id
      description: The CVE ID for which the record is being submitted.
      required: true
      schema:
        type: string
        pattern: '^CVE-[0-9]{4}-[0-9]{4,}$'
    shortname-path:
      in: path
      name: shortname
      description: The short name of the organization.
      required: true
      schema:
        type: string   
    username-path:
      in: path
      name: username
      description: The user name of the user.
      required: true
      schema:
        type: string
    page-query:
      in: query
      name: page
      description: The current page in the paginator.
      required: false
      schema:
        type: integer
        minimum: 1  
  schemas:
    cve-id:
      properties:
        cve_id:
          type: string
          pattern: ^CVE-[0-9]{4}-[0-9]{4,}$
        cve_year:
          type: string
          pattern: ^[0-9]{4}$
        owning_cna:
          type: string
          description: The shortname for the organization that owns the CVE-ID.
        state:
          type: string
          enum: [RESERVED, PUBLIC, REJECT]
        requested_by:
          type: object
          properties:
            cna:
              type: string
              description: The shortname for the organization of the user that requested the ID.
            user:
              type: string
              description: The username for the account that requested the ID.
        reserved:
          type: string
          format: date-time
          description: The time the ID was reserved.
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the ID was created.
            modified:
              type: string
              format: date-time
              description: The last time the ID was modified.
    cve-id-no-time:
      properties:
        cve_id:
          type: string
          pattern: ^CVE-[0-9]{4}-[0-9]{4,}$
        cve_year:
          type: string
          pattern: ^[0-9]{4}$
        owning_cna:
          type: string
          description: The shortname for the organization that owns the CVE-ID.
        state:
          type: string
          enum: [RESERVED, PUBLIC, REJECT]
        requested_by:
          type: object
          properties:
            cna:
              type: string
              description: The shortname for the organization of the user that requested the ID.
            user:
              type: string
              description: The username for the account that requested the ID.
        reserved:
          type: string
          format: date-time
          description: The time the ID was reserved.
    org:
      properties:
        name:
          type: string
          description: The name of the organization.
        short_name:
          type: string
          description: The short name of the organization.
        UUID:
          type: string
          description: The identifier of the organization.
        policies:
          type: object
          properties:
            id_quota:
              type: integer
              description: The CVE ID quota of the organization.
              minimum: 0
              maximum: 100000
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the organization.
                enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the organization was created.
            modified:
              type: string
              format: date-time
              description: The last time the organization was modified.
    org-no-time:
      properties:
        name:
          type: string
          description: The name of the organization.
        short_name:
          type: string
          description: The short name of the organization.
        UUID:
          type: string
          description: The identifier of the organization.
        policies:
          type: object
          properties:
            id_quota:
              type: integer
              description: The CVE ID quota of the organization
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the organization.
                enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
    user-no-time-secret:
      properties:
        username:
          type: string
          description: The user name of the user.
        org_UUID:
          type: string
          description: The identifier of the organization the user belongs to.
        UUID:
          type: string
          description: The identifier of the user.
        active:
          type: boolean
          description: The user is an active user of the organization.
        name:
          type: object
          properties:
            first:
              type: string
              description: The first name of the user.
            last:
              type: string
              description: The last name of the user.
            middle:
              type: string
              description: The middle name of the user, if any.
            surname:
              type: string
              description: The surname of the user, if any.
            suffix:
              type: string
              description: The suffix of the user, if any.
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the user.
                enum: ['ADMIN']
    user-no-time:
      properties:
        username:
          type: string
          description: The user name of the user.
        org_UUID:
          type: string
          description: The identifier of the organization the user belongs to.
        UUID:
          type: string
          description: The identifier of the user.
        active:
          type: boolean
          description: The user is an active user of the organization.
        name:
          type: object
          properties:
            first:
              type: string
              description: The first name of the user.
            last:
              type: string
              description: The last name of the user.
            middle:
              type: string
              description: The middle name of the user, if any.
            surname:
              type: string
              description: The surname of the user, if any.
            suffix:
              type: string
              description: The suffix of the user, if any.
        secret:
          type: string
          description: The api key of the user.
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the user.
                enum: ['ADMIN']
    user-no-secret:
      properties:
        username:
          type: string
          description: The user name of the user.
        org_UUID:
          type: string
          description: The identifier of the organization the user belongs to.
        UUID:
          type: string
          description: The identifier of the user.
        active:
          type: boolean
          description: The user is an active user of the organization.
        name:
          type: object
          properties:
            first:
              type: string
              description: The first name of the user.
            last:
              type: string
              description: The last name of the user.
            middle:
              type: string
              description: The middle name of the user, if any.
            surname:
              type: string
              description: The surname of the user, if any.
            suffix:
              type: string
              description: The suffix of the user, if any.
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the user.
                enum: ['ADMIN']
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the user was created.
            modified:
              type: string
              format: date-time
              description: The last time the user was modified.
    arrayOfCveIds:
      type: object
      properties:
        cve_ids:
          type: array
          items:
            $ref: '#/components/schemas/cve-id'
    arrayOfCveIdsNoTime:
      type: object
      properties:
        cve_ids:
          type: array
          items:
            $ref: '#/components/schemas/cve-id-no-time'
    arrayOfCveRecords:
      type: array
      items:
        anyOf:
          - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'
          - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'
    arrayOfOrgs:
      type: array
      items:
        $ref: '#/components/schemas/org'
    arrayOfOrgsNoTime:
      type: array
      items:
        $ref: '#/components/schemas/org-no-time'
    arrayOfUsersNoSecret:
      type: array
      items:
        $ref: '#/components/schemas/user-no-secret'
    errorCveIds:
      properties:
        error:
          type: string
          description: The title of the error RESERVED_PARTIAL_AMOUNT
        message:
          type: string
          description: An elaboration of the error
        details:
          type: object
          properties:
            amount_reserved:
              type: number
              description: The amount of IDs that were reserved in the system.
        cve_ids:
          type: array
          items:
            $ref: '#/components/schemas/cve-id-no-time'
paths:
  /cve-id-range/{year}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - in: path
        name: year
        description: The year of the CVE-ID-Range record.
        required: true
        schema:
          type: integer
    post:
      summary: Creates a CVE-ID-Range record for the scpecified year, only allowed by the Secretariat.
      operationId: cveIdRangeCreate
      responses:
        200:
          description: The CVE-ID-Range entity was created.
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /cve-id:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
    get:
      summary: Retrieves all CVE IDs entity owns after applying the query params.
      operationId: cveIdGetFiltered
      parameters:
        - in: query
          name: state
          description: Filter by CVE state [RESERVED, PUBLIC, or REJECT].
          required: false
          schema:
            type: string
        - in: query
          name: cve_id_year
          description: Filter by the year in the CVE ID (YYYY).
          required: false
          schema:
            type: integer
        - in: query
          name: time_reserved.lt
          description: Get all CVE-ID records reserved before timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_reserved.gt
          description: Get all CVE-ID records reserved after timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_modified.lt
          description: Get all CVE-ID records modified before timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_modified.gt
          description: Get all CVE-ID records modified after timestamp.
          required: false
          schema:
            type: string
            format: date-time  
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: A filtered list of CVE-ID records the organization owns given the query parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    description: Total CVE records found
                  itemsPerPage:
                    type: integer
                    description: Number of CVE records in a page
                  pageCount:
                    type: integer
                    description: Total number of pages
                  currentPage:
                    type: integer
                    description: Current page
                  prevPage:
                    type: integer
                    description: Previous page
                  nextPage:
                    type: integer
                    description: Next page
                  cve_ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    post:
      summary: Reserves CVE-ID records for the organization provided in the short_name query parameter, only allowed by the Secretariat or organizations witth the CNA role.
      operationId: cveIdReserve
      parameters:
        - in: query
          name: batch_type
          description: When the amount is greater than one, it indicates whether the CVE IDs should be sequential or nonsequential.
          required: false
          schema:
            type: string
            enum: [sequential, nonsequential, non-sequential]
        - in: query
          name: amount
          description: Amount of CVE IDs to reserve.
          required: true
          schema:
            type: integer
        - in: query
          name: cve_year
          description: The year the CVE IDs will be reserved for. (i.e., 1999, ..., currentYear + 1)
          required: true
          schema:
            type: integer        
        - in: query
          name: short_name
          description: The CNA that will own the CVE IDs reserved.
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of the newly reserved CVE-IDs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayOfCveIdsNoTime'
        206:
          description: A partial list of the CVE-IDs the IDR service managed to reserve before encountering a case where no more CVE IDs could be reserved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorCveIds'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /cve-id/{cve-id}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/cve-id-path'
    get:
      summary: Retrieves a CVE-ID record by ID, can be a cve id the entity doesn't own if in a PUBLIC or REJECT state.
      operationId: cveIdGetSingle        
      responses:
        200:
          description: The requested CVE-ID record is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    put:
      summary: Updates a CVE-ID record by ID, only allowed by the Secretariat.
      operationId: cveIdUpdateSingle
      parameters:
        - in: query
          name: state
          description: Update the state of a CVE-ID record.
          required: false
          schema:
            type: string
        - in: query
          name: org
          description: Update the owning_cna of a CVE-ID record.
          required: false
          schema:
            type: string
      responses:
        200:
          description: The updated CVE-ID record is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /cve:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
    get:
      summary: Retrieves all CVE records, only allowed by the Secretariat.
      operationId: cveGetFiltered
      parameters:
        - in: query
          name: time_modified.lt
          description: Get all CVE records modified before timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_modified.gt
          description: Get all CVE records modified after timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: A list of CVE records and pagination fields, only allowed by the Secretariat.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    description: Total CVE records found
                  itemsPerPage:
                    type: integer
                    description: Number of CVE records in a page
                  pageCount:
                    type: integer
                    description: Total number of pages
                  currentPage:
                    type: integer
                    description: Current page
                  prevPage:
                    type: integer
                    description: Previous page
                  nextPage:
                    type: integer
                    description: Next page
                  cveRecords:
                    $ref: '#/components/schemas/arrayOfCveRecords'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /cve/{cve-id}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/cve-id-path'
    get:
      summary: Returns a CVE record by CVE ID, only allowed by the Secretariat.
      operationId: cveGetSingle
      responses:
        200:
          description: The requested CVE record is returned.
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'
                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'
        400:
          description: Bad Request
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    post:
      summary: Creates a CVE Record by ID, only allowed by the Secretariat.
      operationId: cveSubmit
      responses:
        200:
          description: Returns the CVE record created.
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'
                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    put:
      summary: Updates a CVE Record by ID, only allowed by the Secretariat.
      operationId: cveUpdateSingle
      responses:
        200:
          description: Returns the CVE record updated.
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'
                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /org:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
    get:
      summary: Retrieves all organization records, only allowed by the Secretariat.
      operationId: orgAll
      parameters:
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: Returns all organization records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    description: Total CVE records found
                  itemsPerPage:
                    type: integer
                    description: Number of CVE records in a page
                  pageCount:
                    type: integer
                    description: Total number of pages
                  currentPage:
                    type: integer
                    description: Current page
                  prevPage:
                    type: integer
                    description: Previous page
                  nextPage:
                    type: integer
                    description: Next page
                  organizations: 
                    $ref: '#/components/schemas/arrayOfOrgs'
        400:
          description: Bad Request
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    post:
      summary: Creates an organization record, only allowed by the Secretariat.
      operationId: orgCreateSingle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                short_name:
                  type: string
                  description: The short name of the organization.
                  required: true
                name:
                  type: string
                  description: The name of the organization.
                  required: true
                authority:
                  type: object
                  properties:
                    active_roles:
                      type: array
                      items:
                        type: string
                        description: The active roles of the organization.
                        required: false
                        enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
                policies:
                  type: object
                  properties:
                    id_quota:
                      type: integer
                      description: The CVE ID quota of the organization.
                      required: false
                      minimum: 0
                      maximum: 100000
      responses:
        200:
          description: Returns the organization record created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-no-time'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /org/{shortname}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    get:
      summary: Retrieve an organization record given the short name, only allowed by the Secretariat or owner organization.
      operationId: orgSingle
      responses:
        200:
          description: Returns the organization record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org'
        400:
          description: Bad Request
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    put: 
      summary: Update an organization record, only allowed by [TODO].
      operationId: orgUpdateSingle
      parameters:
        - in: query
          name: shortname
          description: Update the short name of the organization.
          required: false
          schema:
            type: string
        - in: query
          name: id_quota
          description: Update the CVE ID quota of the organization.
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100000
        - in: query
          name: name
          description: Update the name of the organization.
          required: false
          schema:
            type: string
        - in: query
          name: active_roles.add
          description: Add an active role to the organization.
          required: false
          schema:
            type: string
            enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
        - in: query
          name: active_roles.remove
          description: Remove an active role from the organization.
          required: false
          schema:
            type: string
            enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
      responses:
        200:
          description: Returns the organization record updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-no-time'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /org/{shortname}/users:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    get:
      summary: Retrieve all user records specified by the short name of the organization, only allowed by the Secretariat or owner organization.
      operationId: userAll
      parameters:
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: 
          content:
            application/json:
              schema:
                schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    description: Total user records found
                  itemsPerPage:
                    type: integer
                    description: Number of user records in a page
                  pageCount:
                    type: integer
                    description: Total number of pages
                  currentPage:
                    type: integer
                    description: Current page
                  prevPage:
                    type: integer
                    description: Previous page
                  nextPage:
                    type: integer
                    description: Next page
                  users:
                    $ref: '#/components/schemas/arrayOfUsersNoSecret'
        400:
          description: Bad Request
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /org/{shortname}/user:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    post:
      summary: Create a user record with the provided short name as the owning organization, only allowed by the Secretariat or an Admin user of the owner organization.
      operationId: userCreateSingle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user name of the user.
                  required: true
                org_UUID:
                  type: string
                  description: The identifier of the organization the user belongs to.
                  required: false
                UUID:
                  type: string
                  description: The identifier of the user.
                  required: false
                name:
                  type: object
                  properties:
                    first:
                      type: string
                      description: The first name of the user.
                      required: false
                    last:
                      type: string
                      description: The last name of the user.
                      required: false
                    middle:
                      type: string
                      description: The middle name of the user, if any.
                      required: false
                    surname:
                      type: string
                      description: The surname of the user, if any.
                      required: false
                    suffix:
                      type: string
                      description: The suffix of the user, if any.
                      required: false
                authority:
                  type: object
                  properties:
                    active_roles:
                      type: array
                      items:
                        type: string
                        description: The active roles of the user.
                        required: false
                        enum: ['ADMIN']
      responses:
        200:
          description: 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-no-time'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /org/{shortname}/user/{username}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
      - $ref: '#/components/parameters/username-path'
    get:
      summary: Retrieve a user record, only allowed by the Secretariat or owner organization.
      operationId: userSingle
      responses:
        200:
          description: 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-no-secret'
        400:
          description: Bad Request
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    put:
      summary: Update a user record, only allowed by the Secretariat, the user to be updated or an Admin user of the owner organization.
      operationId: userUpdateSingle
      parameters:
        - in: query
          name: active
          description: Update the active state of the user record.
          required: false
          schema:
            type: boolean
        - in: query
          name: new_username
          description: Update the user name of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: org_shortname
          description: Update the organization the user belongs to.
          required: false
          schema:
            type: string
        - in: query
          name: name.first
          description: Update the first name of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: name.last
          description: Update the last name of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: name.middle
          description: Update the middlename of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: name.surname
          description: Update the surname of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: name.suffix
          description: Update suffix of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: active_roles.add
          description: Add an active role to the user.
          required: false
          schema:
            type: string
        - in: query
          name: active_roles.remove
          description: Remove an active role from the user.
          required: false
          schema:
            type: string
      responses:
        200:
          description: 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-no-time-secret'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /org/{shortname}/user/{username}/reset_secret:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
      - $ref: '#/components/parameters/username-path'
    put:
      summary: Reset the api key of the user, only allowed by the Secretariat, the user to be updated or an Admin user of the owner organization.
      operationId: userResetSecret
      responses:
        200:
          description: Returns the new api key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  API-secret:
                    type: string
                    description: The new api key of the user.
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /org/{shortname}/id_quota:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    get:
      summary: Retrieves the details about the CVE ID quota of an organization, only allowed by the Secretariat or owner organization.
      operationId: orgIdQuota
      responses:
        200:
          description: Returns CVE ID quota details of an organization.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_quota:
                    type: integer
                    description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.
                  total_reserved:
                    type: integer
                    description: The total number of CVE IDs across all years that the organization has in the RESERVED state.
                  available:
                    type: integer
                    description: The number of CVE IDs that can be reserved by the organization (e.g., id_quota - total_reserved)
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
